services:

  cetusguard:
    container_name: "cetusguard"
    image: "docker.io/hectorm/cetusguard:v1"
    restart: "on-failure"
    read_only: true
    networks:
      - "cetusguard-private"
      - "cetusguard-public"
    volumes:
      - "./rules.list:/rules.list:ro"
      - "./certs/client/:/certs/client/:ro"
      - "./certs/server/:/certs/server/:ro"
    environment:
      CETUSGUARD_BACKEND_ADDR: "tcp://dockerd:2376"
      CETUSGUARD_BACKEND_TLS_CACERT: "/certs/client/ca.pem"
      CETUSGUARD_BACKEND_TLS_CERT: "/certs/client/cert.pem"
      CETUSGUARD_BACKEND_TLS_KEY: "/certs/client/key.pem"
      CETUSGUARD_FRONTEND_ADDR: "tcp://:2376"
      CETUSGUARD_FRONTEND_TLS_CACERT: "/certs/server/ca.pem"
      CETUSGUARD_FRONTEND_TLS_CERT: "/certs/server/cert.pem"
      CETUSGUARD_FRONTEND_TLS_KEY: "/certs/server/key.pem"
      CETUSGUARD_RULES_FILE: "/rules.list"
      CETUSGUARD_LOG_LEVEL: "7"
    depends_on:
      - "dockerd"

  dockerd:
    container_name: "cetusguard-dockerd"
    image: "docker.io/docker:28-dind"
    restart: "on-failure"
    privileged: true
    networks:
      - "cetusguard-private"
    volumes:
      - "./certs/server/:/certs/server/:ro"
    environment:
      DOCKER_HOST: "tcp://dockerd:2376"
      DOCKER_TLS_CERTDIR: "/certs/"

  docker:
    container_name: "cetusguard-docker"
    image: "docker.io/docker:28-cli"
    restart: "on-failure"
    networks:
      - "cetusguard-public"
    volumes:
      - "./certs/client/:/certs/client/:ro"
    environment:
      DOCKER_HOST: "tcp://cetusguard:2376"
      DOCKER_TLS_VERIFY: "1"
      DOCKER_CERT_PATH: "/certs/client/"
    entrypoint: "/bin/sh"
    command: ["-c", "trap : TERM INT; while :; do sleep 60; done & wait"]
    depends_on:
      - "cetusguard"

networks:

  cetusguard-private:
    name: "cetusguard-private"

  cetusguard-public:
    name: "cetusguard-public"
